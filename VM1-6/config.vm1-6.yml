########################################################################

# avec sudo ansible-playbook -c local config.vm1.yml
---
- hosts: localhost
  tasks:
    # adresse IPv4 avec nmcli (CLI pour NetworkManager)
    # éventuellement, pour supprimer les connexions en trop, faire
    # $ nmcli connection del ansible-eth1
     - name: Get daemon
       apt:
         name: daemon
         state: latest
     - name: Get iperf3
       apt:
         name: iperf3
         state: latest
     - name: Get nc6
       apt:
         name: netcat6
         state: latest           
     - shell: nmcli connection del "Connexion filaire 1"
       ignore_errors: True # permet à ansible de continuer
     - shell: nmcli connection del ansible-eth1
       ignore_errors: True # permet à ansible de continuer
     - shell: nmcli connection del ansible-eth2
       ignore_errors: True # permet à ansible de continuer
     - shell: nmcli connection del "Connexion filaire 2"
       ignore_errors: True # permet à ansible de continuer      
     - shell: nmcli connection add ifname eth1 con-name ansible-eth1 type ethernet ip4 172.16.2.156 
     - shell: nmcli connection add ifname eth2 con-name ansible-eth2 type ethernet ip6 fc00:1234:1::16/64 gw6 fc00:1234:1::26
     - shell: ip route del default
       ignore_errors: True # permet à ansible de continuer
     - sysctl: name="net.ipv4.ip_forward" value=1 sysctl_set=yes state=present reload=yes 
     - shell: ip route add 172.16.2.151 dev eth1  proto static  scope link  metric 1024
     # - shell: ip route add 172.16.2.128/28 via 172.16.2.151 dev eth1
     #   ignore_errors: True # permet à ansible de continuer      
     # - shell: ip route add 172.16.2.160/28 via 172.16.2.151 dev eth1
     #   ignore_errors: True # permet à ansible de continuer
     # - shell: ip route add 172.16.2.176/28 via 172.16.2.151 dev eth1
     #   ignore_errors: True # permet à ansible de continuer      
